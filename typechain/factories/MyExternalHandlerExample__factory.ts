/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MyExternalHandlerExample,
  MyExternalHandlerExampleInterface,
} from "../MyExternalHandlerExample";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ticketOwner",
        type: "address",
      },
    ],
    name: "TicketAction",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "onTicketActionSupported",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "ticketOwner",
        type: "address",
      },
    ],
    name: "ticketAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061019f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634ca4ffbe1461003b578063d628af03146100a5575b600080fd5b610070610049366004610137565b7f4ca4ffbe0000000000000000000000000000000000000000000000000000000092915050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b6100b86100b3366004610137565b6100ba565b005b6040805173ffffffffffffffffffffffffffffffffffffffff8085168252831660208201527fa0f4e3d3506a5e72e1376a1a86c1406c1da27b45cdc554ed4b8b40aa14649eb1910160405180910390a15050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461013257600080fd5b919050565b60008060408385031215610149578182fd5b6101528361010e565b91506101606020840161010e565b9050925092905056fea26469706673582212204ecee3c6627e10e2987f82e91e756dba7f654d74835297ebd7491be10777e4b264736f6c63430008040033";

export class MyExternalHandlerExample__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyExternalHandlerExample> {
    return super.deploy(overrides || {}) as Promise<MyExternalHandlerExample>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyExternalHandlerExample {
    return super.attach(address) as MyExternalHandlerExample;
  }
  connect(signer: Signer): MyExternalHandlerExample__factory {
    return super.connect(signer) as MyExternalHandlerExample__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyExternalHandlerExampleInterface {
    return new utils.Interface(_abi) as MyExternalHandlerExampleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyExternalHandlerExample {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MyExternalHandlerExample;
  }
}
