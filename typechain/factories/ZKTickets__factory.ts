/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZKTickets, ZKTicketsInterface } from "../ZKTickets";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "NewTicketedEventCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "eventName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "availableTickets",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "externalHandler",
        type: "address",
      },
    ],
    name: "createNewTicketedEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "handleTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketedEventIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "purchaseTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "ticketCommitments",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ticketedEventIndex",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "used",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketedEventIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ticketedEvents",
    outputs: [
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "eventName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "availableTickets",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "externalHandler",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "verifyTicket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e87380380610e8783398101604081905261002f91610057565b600080546001600160a01b0319166001600160a01b0392909216919091178155600455610085565b600060208284031215610068578081fd5b81516001600160a01b038116811461007e578182fd5b9392505050565b610df3806100946000396000f3fe6080604052600436106100965760003560e01c80632b7ac3f31161006957806351dbe2dd1161004e57806351dbe2dd146101f3578063a7aa5a7014610213578063d379f4dd1461023757600080fd5b80632b7ac3f31461019b578063368d804d146101d357600080fd5b8063012f64a31461009b57806317cc915c146100d5578063181d92ff146101155780631aef57411461012a575b600080fd5b3480156100a757600080fd5b506100bb6100b6366004610b49565b610257565b6040516100cc959493929190610c4c565b60405180910390f35b3480156100e157600080fd5b506101056100f0366004610b49565b60036020526000908152604090205460ff1681565b60405190151581526020016100cc565b610128610123366004610b61565b610325565b005b34801561013657600080fd5b50610174610145366004610b49565b60026020819052600091825260409091208054600182015491909201546001600160a01b039092169160ff1683565b604080516001600160a01b03909416845260208401929092521515908201526060016100cc565b3480156101a757600080fd5b506000546101bb906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b3480156101df57600080fd5b506101056101ee366004610b61565b6104ff565b3480156101ff57600080fd5b5061012861020e366004610ae9565b61054a565b34801561021f57600080fd5b5061022960045481565b6040519081526020016100cc565b34801561024357600080fd5b50610128610252366004610b82565b610843565b60016020819052600091825260409091208054918101546002820180546001600160a01b039094169391929161028c90610d6c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b890610d6c565b80156103055780601f106102da57610100808354040283529160200191610305565b820191906000526020600020905b8154815290600101906020018083116102e857829003601f168201915b5050505060038301546004909301549192916001600160a01b0316905085565b60008281526001602081905260409091200154341461038b5760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964205469636b657420507269636521000000000000000000000060448201526064015b60405180910390fd5b6000818152600260208190526040909120015460ff16156104145760405162461bcd60e51b815260206004820152602160248201527f5468617420636f6d6d69746d656e742077617320616c7265616479207573656460448201527f21000000000000000000000000000000000000000000000000000000000000006064820152608401610382565b6000828152600160205260409020600301546104725760405162461bcd60e51b815260206004820152600960248201527f536f6c64206f75742100000000000000000000000000000000000000000000006044820152606401610382565b6000818152600260208181526040808420928301805460ff19166001908117909155835473ffffffffffffffffffffffffffffffffffffffff1916331784559283018690558584529082905282206003018054919290916104d4908490610d55565b90915550506000828152600160205260409020546104fb906001600160a01b031634610932565b5050565b60008181526003602052604081205460ff161561051e57506000610544565b6000838152600260208190526040909120015460ff1661054057506000610544565b5060015b92915050565b60008281526003602052604090205460ff16156105a95760405162461bcd60e51b815260206004820152601860248201527f5469636b65742077617320616c726561647920757365642100000000000000006044820152606401610382565b6000818152600260208190526040909120015460ff1661060b5760405162461bcd60e51b815260206004820152601660248201527f5469636b657420646f6573206e6f7420657869737421000000000000000000006044820152606401610382565b6000546040805180820182528535815260208087013581830152825160808082018552888501358286019081526060808b01359084015282528451808601865290890135815260a089013581840152818301528351808501855260c0890135815260e0890135818401528451808601865288815292830187905293517ff5c9d69e0000000000000000000000000000000000000000000000000000000081526001600160a01b039095169463f5c9d69e946106cb94939091600401610cd6565b602060405180830381600087803b1580156106e557600080fd5b505af11580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d9190610b22565b6107695760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964207469636b65742000000000000000000000000000000000006044820152606401610382565b6000828152600360209081526040808320805460ff19166001908117909155848452600283528184208101548452909152902060048101546001600160a01b0316801561083c57600083815260026020526040908190205490517fd628af030000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b0391821660248201529082169063d628af0390604401600060405180830381600087803b15801561082357600080fd5b505af1158015610837573d6000803e3d6000fd5b505050505b5050505050565b6001600460008282546108569190610d3d565b9091555050600480546000908152600160208190526040808320805473ffffffffffffffffffffffffffffffffffffffff1916331790558354835280832090910188905591548152206108ad906002018585610a50565b5060048054600090815260016020908152604080832060030186905583548352918290208301805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038616179055915490519081527fc04a4b806e66ac4f2d22901a5ff4dacec9b5ed8c01a819aceb7f364bb4f20984910160405180910390a15050505050565b804710156109825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610382565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146109cf576040519150601f19603f3d011682016040523d82523d6000602084013e6109d4565b606091505b5050905080610a4b5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610382565b505050565b828054610a5c90610d6c565b90600052602060002090601f016020900481019282610a7e5760008555610ac4565b82601f10610a975782800160ff19823516178555610ac4565b82800160010185558215610ac4579182015b82811115610ac4578235825591602001919060010190610aa9565b50610ad0929150610ad4565b5090565b5b80821115610ad05760008155600101610ad5565b60008060006101408486031215610afe578283fd5b610100840185811115610b0f578384fd5b9395933594505050610120840135919050565b600060208284031215610b33578081fd5b81518015158114610b42578182fd5b9392505050565b600060208284031215610b5a578081fd5b5035919050565b60008060408385031215610b73578182fd5b50508035926020909101359150565b600080600080600060808688031215610b99578081fd5b85359450602086013567ffffffffffffffff80821115610bb7578283fd5b818801915088601f830112610bca578283fd5b813581811115610bd8578384fd5b896020828501011115610be9578384fd5b6020830196508095505050506040860135915060608601356001600160a01b0381168114610c15578182fd5b809150509295509295909350565b8060005b6002811015610c46578151845260209384019390910190600101610c27565b50505050565b6001600160a01b038616815260006020868184015260a0604084015285518060a0850152825b81811015610c8e5787810183015185820160c001528201610c72565b81811115610c9f578360c083870101525b5060608401869052601f01601f1916830160c0019150610ccc905060808301846001600160a01b03169052565b9695505050505050565b6101408101610ce58287610c23565b60408083018660005b6002811015610d1557610d02838351610c23565b9183019160209190910190600101610cee565b50505050610d2660c0830185610c23565b610d34610100830184610c23565b95945050505050565b60008219821115610d5057610d50610da7565b500190565b600082821015610d6757610d67610da7565b500390565b600181811c90821680610d8057607f821691505b60208210811415610da157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208fee532a551d2cec58f6ad22f41b2b8107efad7790b9177d09bcd1f15028839664736f6c63430008040033";

export class ZKTickets__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _verifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZKTickets> {
    return super.deploy(_verifier, overrides || {}) as Promise<ZKTickets>;
  }
  getDeployTransaction(
    _verifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  attach(address: string): ZKTickets {
    return super.attach(address) as ZKTickets;
  }
  connect(signer: Signer): ZKTickets__factory {
    return super.connect(signer) as ZKTickets__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKTicketsInterface {
    return new utils.Interface(_abi) as ZKTicketsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKTickets {
    return new Contract(address, _abi, signerOrProvider) as ZKTickets;
  }
}
